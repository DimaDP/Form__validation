{"version":3,"sources":["components/Header/Header.js","components/cardsInfo.js","components/Card/Card.js","components/validators.js","App.js","index.js"],"names":["Header","className","src","alt","type","cardCodes","4","5","3","6","1","2","cardLogos","visa","maestro","masterCard","american","Card","formValid","formSumbited","useState","isProcessing","setIsProcessing","cardNumber","setCardNumber","isNumberValid","setIsNumberValid","date","setDate","isDateValid","setDateValid","cvv","setCvv","isCvvValid","setIsCvvValid","isSubmited","setIsSubmited","currentImage","setCurentImage","errorMessage","window","screen","width","onSubmit","event","preventDefault","setTimeout","value","test","nCheck","bEven","number","replace","length","n","cDigit","charAt","nDigit","parseInt","lunaCheck","dateList","split","Date","dateCheck","alert","location","reload","autoComplete","onChange","target","payId","preparedCardNumber","substr","i","style","backgroundImage","placeholder","preparedDate","divideDdate","name","preparedCvv","size","color","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.445db4f1.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\nexport const Header = () => (\n  <header className=\"header\">\n    <img src=\"./img/CREDITON.png\" alt=\"crediton\" className=\"header__logo\" />\n    <div className=\"language-toggler\">\n      <button\n        type=\"button\"\n        className=\"language-toggler__link language-toggler__link--active\"\n      >\n        РУ\n      </button>\n      <button type=\"button\" className=\"language-toggler__link\">УКР</button>\n    </div>\n  </header>\n);\n","export const cardCodes = {\n  4: 'visa',\n  5: 'masterCard',\n  3: 'maestro',\n  6: 'maestro',\n  1: 'american',\n  2: 'american',\n};\n\nexport const cardLogos = {\n  visa: './img/visa.png',\n  maestro: './img/maestro.png',\n  masterCard: './img/master.png',\n  american: './img/american-express.png',\n};\n","/* eslint-disable no-nested-ternary */\nimport React, { useState } from 'react';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport './Card.scss';\nimport { lunaCheck, dateCheck } from '../validators';\nimport { cardCodes, cardLogos } from '../cardsInfo';\n\nexport const Card = () => {\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [cardNumber, setCardNumber] = useState('');\n  const [isNumberValid, setIsNumberValid] = useState(true);\n  const [date, setDate] = useState('');\n  const [isDateValid, setDateValid] = useState(true);\n  const [cvv, setCvv] = useState('');\n  const [isCvvValid, setIsCvvValid] = useState(true);\n  const [isSubmited, setIsSubmited] = useState(false);\n  const [currentImage, setCurentImage] = useState('');\n  let formValid;\n  let formSumbited;\n\n  const handleCardNumberInput = (event) => {\n    setIsNumberValid(true);\n    const { value } = event.target;\n    const payId = value[0];\n    const preparedCardNumber = value.replace(/\\D/g, '').substr(0, 16);\n    let number = '';\n    const paymentType = cardCodes[payId];\n    const image = cardLogos[paymentType];\n\n    setCurentImage(image);\n\n    for (let i = 0; i < preparedCardNumber.length; i += 1) {\n      if (i % 4 === 0 && i !== 0) {\n        number += ` ${preparedCardNumber[i]}`;\n      } else {\n        number += preparedCardNumber[i];\n      }\n    }\n\n    setCardNumber(number);\n  };\n\n  const handleDateInput = (event) => {\n    setDateValid(true);\n    const { value } = event.target;\n    const preparedDate = value.replace(/\\D/g, '').substr(0, 4);\n    let divideDdate = '';\n\n    for (let i = 0; i < preparedDate.length; i += 1) {\n      if (i === 2) {\n        divideDdate += `/${preparedDate[i]}`;\n      } else {\n        divideDdate += preparedDate[i];\n      }\n    }\n\n    setDate(divideDdate);\n  };\n\n  const handleCvv = (event) => {\n    setIsCvvValid(true);\n    const { value } = event.target;\n    const preparedCvv = value.replace(/\\D/g, '').substr(0, 3);\n\n    setCvv(preparedCvv);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setIsProcessing(true);\n    setTimeout(() => {\n      if (lunaCheck(cardNumber)) {\n        setIsNumberValid(true);\n        formValid = true;\n      } else {\n        setIsNumberValid(false);\n        formValid = false;\n      }\n\n      if (dateCheck(date)) {\n        setDateValid(true);\n        formValid = formValid && true;\n      } else {\n        setDateValid(false);\n        formValid = formValid && false;\n      }\n\n      if (cvv.length < 3) {\n        setIsCvvValid(false);\n        formValid = formValid && false;\n      } else {\n        setIsCvvValid(true);\n        formValid = formValid && true;\n      }\n\n      setIsSubmited(true);\n      formSumbited = true;\n      setIsProcessing(false);\n    }, 500);\n    setTimeout(() => {\n      if (formValid && formSumbited) {\n        // eslint-disable-next-line no-alert\n        alert('Processed');\n        window.location.reload();\n      }\n    }, 600);\n  };\n\n  const errorMessage = (window.screen.width > 600)\n    ? '* Поле обязательно для ввода' : '* Поле обязательно';\n\n  return (\n    <section className=\"section card__section\">\n      <form className=\"card__form\" onSubmit={handleSubmit} autoComplete=\"off\">\n        <span className=\"card__heading\">Номер карты</span>\n        <input\n          onChange={handleCardNumberInput}\n          value={cardNumber}\n          className={\n            (!isSubmited || isNumberValid) ? 'card__input'\n              : 'card__input card__input--error'\n          }\n          style={{ backgroundImage: `url(${currentImage})` }}\n          placeholder=\"Номер карты\"\n        />\n        <span className=\"card__error\">\n          {\n            (!isSubmited || isNumberValid) ? ''\n              : (date.length === 0) ? '* Поле обязательно для ввода'\n                : '* Введите валидный номер карты'\n          }\n        </span>\n        <div className=\"card__wrapper\">\n          <input\n            onChange={handleDateInput}\n            value={date}\n            name=\"date\"\n            className={\n              (!isSubmited || isDateValid) ? 'card__input card__input--small'\n                : 'card__input card__input--small card__input--error'\n            }\n            placeholder=\"Срок действия\"\n          />\n          <input\n            type=\"password\"\n            value={cvv}\n            onChange={handleCvv}\n            className={\n              (!isSubmited || isCvvValid) ? 'card__input card__input--small'\n                : 'card__input card__input--small card__input--error'\n            }\n            placeholder=\"CVV код\"\n          />\n        </div>\n        <div className=\"card__errors-wrapper\">\n          <span className=\"card__error--small card__error\">\n            {\n              (!isSubmited || isDateValid) ? ''\n                : (date.length === 0) ? errorMessage : '* Дата невалидная'\n            }\n          </span>\n          <span className=\"card__error--small card__error\">\n            {(cvv === '' && isSubmited) ? errorMessage\n              : isCvvValid ? '' : '* CVV невалидный'\n            }\n          </span>\n        </div>\n        <span className=\"card__info\">\n          Для привязки карты мы проведем платеж в\n          размере 1.00 UAH, который будет возвращен\n          в течении 30 минут\n        </span>\n        <button\n          type=\"submit\"\n          className=\"card__button\"\n        >\n          {isProcessing ? (\n            <ClipLoader\n              size={30}\n              color=\"#fff\"\n            />\n          ) : 'Получить деньги'}\n        </button>\n      </form>\n\n    </section>\n  );\n};\n","export const lunaCheck = (value) => {\n  if (value === '') {\n    return false;\n  }\n\n  if (/[^0-9-\\s]+/.test(value)) {\n    return false;\n  }\n\n  let nCheck = 0;\n  let bEven = false;\n  const number = value.replace(/\\D/g, '');\n\n  if (number.length < 16) {\n    return false;\n  }\n\n  for (let n = number.length - 1; n >= 0; n -= 1) {\n    const cDigit = number.charAt(n);\n    let nDigit = parseInt(cDigit, 10);\n\n    if (bEven) {\n      nDigit *= 2;\n      if ((nDigit) > 9) {\n        nDigit -= 9;\n      }\n    }\n\n    nCheck += nDigit;\n    bEven = !bEven;\n  }\n\n  return (nCheck % 10) === 0;\n};\n\nexport const dateCheck = (date) => {\n  const dateList = date.split('/');\n\n  if (dateList[0] > 12 || dateList[0] < 1) {\n    return false;\n  }\n\n  return new Date() < new Date(+`20${dateList[1]}`, +dateList[0] - 1);\n};\n","import React from 'react';\nimport './App.scss';\nimport { Header } from './components/Header/Header';\nimport { Card } from './components/Card/Card';\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n    <h1 className=\"heading\">Добавление платежной карты</h1>\n    <Card />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}